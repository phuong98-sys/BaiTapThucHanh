@model Gosei.SimpleTaskApp.Web.Models.Tasks.IndexViewModel

@{
    ViewBag.Title = L("TaskList");
    ViewBag.ActiveMenu = "TaskList"; //Matches with the menu name in SimpleTaskAppNavigationProvider to highlight the menu item
}
@section scripts
{
    <environment names="Development">
        <script src="~/js/views/tasks/index.js"></script>
    </environment>

    <environment names="Staging,Production">
        <script src="~/js/views/tasks/index.min.js"></script>
    </environment>
    <environment names="Development">
        <script src="~/js/views/tasks/edit.js"></script>
    </environment>

    <environment names="Staging,Production">
        <script src="~/js/views/tasks/edit.min.js"></script>
    </environment>
    <environment names="Development">
        <script src="~/js/views/tasks/delete.js"></script>
    </environment>

    <environment names="Staging,Production">
        <script src="~/js/views/tasks/delete.min.js"></script>
    </environment>
}
<a class="btn btn-primary btn-sm" asp-action="Create">@L("AddNew")</a>
<h2>
    @L("TaskList")
    <span class="pull-right">
        @Html.DropDownListFor(
           model => model.SelectedTaskState,
           Model.GetTasksStateSelectListItems(LocalizationManager),
           new
           {
               @class = "form-control",
               id = "TaskStateCombobox"
           })
    </span>
</h2>

<div class="row">
    <div>
        <ul class="list-group" id="TaskList">
            @foreach (var task in Model.Tasks)
            {
                <li class="list-group-item">
                    <span class="pull-right label @Model.GetTaskLabel(task)">@L($"TaskState_{task.State}")</span>
                    <br />
                    @*<a  id="EditTask"
                        ><b>@task.Title</b></a>*@
                    <a data-task-id="@task.Id"
                       class="list-group-item-heading edit-task" data-toggle="modal" data-target="#myModal"><b>@task.Title</b></a>

                    @*<input type="text" id="TaskId" name="TaskId" value="@task.Id" />*@
                    <div class="list-group-item-text">
                        @task.CreationTime.ToString("yyyy-MM-dd HH:mm:ss") | @(task.AssignedPersonName ?? L("Unassigned"))
                    </div>
                    <button data-task-id="@task.Id" class="btn btn-danger btn-sm rounded-0" type="button" data-toggle="tooltip" data-placement="top" title="" data-original-title="Delete" name="btnDelete"><i class="fa fa-trash"></i></button>

                </li>
            }
        </ul>
    </div>
    <div>
        @(ViewBag.id)
    </div>
</div>

<!--Modal Edit Task-->
<div class="panel-heading">

    <div>
        <!--Model to Add Qualification-->
        <div class="modal fade" id="myModal">
            <div class="modal-dialog">
                <div class="modal-content">
                    <div class="modal-header">

                        <a href="#" class="close" data-dismiss="modal">&times;</a>
                    </div>
                    <div class="modal-body">
                        @using (Html.BeginForm(null, null, FormMethod.Post, new { id = "saveTask" }))
                        {
                            @Html.AntiForgeryToken()

                            <div class="content" style="color:black;">

                                <div class="content-body">
                                    <form method="post">
                                        <input type="text" name="Id" id="Id" />
                                        <input type="text" name="CreationTime" id="CreationTime" />
                                        <input type="text" name="AssignedPersonId" id="AssignedPersonId" />
                                        <div class="form-group">
                                            Title
                                            <div class="group-input">
                                                @Html.TextBox("Title", "", new { htmlAttributes = new { @class = "form-control" }, required = "required", style = "max-width:100%; width:100%;height:35px;" })
                                                @Html.ValidationMessage("Title", "", new { @class = "text-danger" })
                                            </div>
                                        </div>
                                        <div class="form-group">
                                            Description
                                            <div class="group-input">
                                                @Html.TextBox("Description", "", new { htmlAttributes = new { @class = "form-control" }, required = "required", style = "max-width:100%; width:100%;height:35px;" })
                                                @Html.ValidationMessage("Description", "", new { @class = "text-danger" })
                                            </div>
                                        </div>
                                        <span class="pull-right">
                                            @Html.DropDownListFor(
                                               model => model.SelectedTaskState,
                                               Model.GetTasksState(LocalizationManager),
                                               new
                                               {
                                                   @class = "form-control",
                                                   id = "TaskStateCombobox1"
                                               })
                                        </span>
                                    </form>

                                    <hr />
                                    <div claa="panel-footer">

                                        <button id="saveQualificationForm" type="submit" name="submit2" id="btnSubmit" value="Accept" class="btn btn-success" style="color:#fff; background-color:#0088c1">Accept</button>
                                        <button class="btn btn-default" data-dismiss="modal">Cancel</button>

                                    </div>
                                </div>

                            </div>

                        }
                    </div>

                </div>
            </div>
        </div>    <!--Model to Add Qualification-->

    </div>

</div>